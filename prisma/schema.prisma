generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  relationMode      = "prisma"
}

model Subtask {
  id          String   @id @default(uuid())
  title       String
  isCompleted Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Task        Task?    @relation(fields: [taskId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  taskId      String?

  @@index([taskId])
}

model Task {
  id        String    @id @default(uuid())
  name      String
  substasks Subtask[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Column    Column?   @relation(fields: [columnId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  columnId  String?

  @@index([columnId])
}

model Column {
  id        String   @id @default(uuid())
  name      String
  order     Int      @default(0)
  tasks     Task[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Board     Board?   @relation(fields: [boardId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  boardId   String?

  @@index([boardId])
}

model Board {
  id        String   @id @default(uuid())
  name      String
  columns   Column[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
